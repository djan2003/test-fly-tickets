{"version":3,"sources":["Components/FlyCard/OneFly/FlyCard.jsx","Components/FlyCard/FlyCard.jsx","Components/NavSort/Nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["OneFly","props","hours","Math","floor","flyTime","minutes","className","price","companyName","parseInt","departCity","airPortDepart","abbAir","airPortArriv","abbAirArive","timeDep","arrTime","isTransit","abbAirCom","FlyCard","abbAirArrive","airPortDepart2","abbAirDep2","airPortArriv2","departDate2","timeFly2","dateArriv2","isTransit2","abbAirArrive2","Nav","useState","minPrice","setMinPrice","maxPrice","setMaxPrice","onChange","sortRicePrice","type","name","value","sortDecreasePrice","sortRiceTime","onClick","withTransit","noTransit","placeholder","e","currentTarget","sortPriceClient","companyAndPrice","map","i","sortCompanyName","App","result1","JSON","stringify","data","result3","parse","default","result","flights","finishData","length","flight","legs","segments","departureCity","caption","carrier","totalFeeAndTaxes","amount","departureAirport","uid","arrivalAirport","arrivalDate","duration","departureDate","finishData1","setFinishData1","finishData2","companyAndMinPrice","sort","a","b","companyAndMinPrice1","company4","includes","push","countTickets","setCountTickets","checkData","dataForSort","filter","tic","min","max","slice","inf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16ae92f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css'\r\n\r\nexport const OneFly = (props) => {\r\n    let hours = Math.floor(props.flyTime / 60);\r\n    let minutes = Math.floor(props.flyTime) - (hours * 60);\r\n    return (\r\n        <div className={'MainContainer'}>\r\n            {props.price\r\n                ? <header className={'header'}>\r\n                    <div>\r\n                        {props.companyName}\r\n                    </div>\r\n                    <div className={'price-block'}>\r\n                        <div className={'price'}>{parseInt(props.price)}</div>\r\n                        <div>Стоимость для одного взрослого пассажира</div>\r\n                    </div>\r\n                </header>\r\n                : <header className={'header'}>\r\n\r\n                </header>\r\n            }\r\n            <div className={'CityContainer'}>\r\n                <div>{props.departCity}/{props.airPortDepart}({props.abbAir})</div>\r\n                <div>-></div>\r\n                <div>{props.price ? <span>Лондон,</span> : <span>Москва,</span>}\r\n                {props.airPortArriv}({props.abbAirArive})</div>\r\n            </div>\r\n            <div className={'TimeContainer'}>\r\n                <div>\r\n                    {props.timeDep}\r\n                </div>\r\n                <div>\r\n                    {`${hours} Ч ${minutes} МИН`}\r\n                </div>\r\n                <div>\r\n                    {props.arrTime}\r\n                </div>\r\n\r\n            </div>\r\n            {props.isTransit > 1\r\n                ? <div className={'transit'}>\r\n                    <div>Пересадка 1</div>\r\n                </div>\r\n\r\n                : <div className={'transit'}>\r\n                    <div>Прямой рейс</div>\r\n                </div>\r\n\r\n            }\r\n            <div className={'AirlinesContainer'}>\r\n                <div>Рейс выполняет:</div>\r\n                <div>{props.abbAirCom} {props.companyName}</div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {OneFly} from \"./OneFly/FlyCard\";\r\nimport './style.css'\r\n\r\nexport const FlyCard = (props) => {\r\n    return (\r\n        <div className={'FlyCardContainer'}>\r\n           <OneFly\r\n               companyName={props.companyName}\r\n               price={props.price}\r\n               departCity={props.departCity}\r\n               airPortDepart={props.airPortDepart}\r\n               abbAir={props.abbAir}\r\n               airPortArriv={props.airPortArriv}\r\n               timeDep={props.timeDep}\r\n               flyTime={props.flyTime}\r\n               arrTime={props.arrTime}\r\n               isTransit={props.isTransit}\r\n               abbAirCom={props.abbAirCom}\r\n               abbAirArive={props.abbAirArrive}\r\n           />\r\n           <OneFly\r\n               companyName={props.companyName}\r\n               departCity={\"Лондон\"}\r\n               airPortDepart={props.airPortDepart2}\r\n               abbAir={props.abbAirDep2}\r\n               airPortArriv={props.airPortArriv2}\r\n               timeDep={props.departDate2}\r\n               flyTime={props.timeFly2}\r\n               arrTime={props.dateArriv2}\r\n               isTransit={props.isTransit2}\r\n               abbAirCom={props.abbAirCom}\r\n               abbAirArive={props.abbAirArrive2}\r\n\r\n           />\r\n           <div className={'btn'}>\r\n                   <button >Выбрать</button>\r\n           </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport './style.css'\r\n\r\nexport const Nav = (props) => {\r\n    let [minPrice, setMinPrice] = useState(0)\r\n    let [maxPrice, setMaxPrice] = useState(100000000)\r\n    const onChangeHadlerMin = (e) => {\r\n        setMinPrice(e.currentTarget.value)\r\n    }\r\n    const onChangeHadlerMax = (e) => {\r\n        setMaxPrice(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div className={'NavContainer'}>\r\n            <div className={'SortContainer'}>\r\n                <div>Сортировать</div>\r\n                <label>\r\n                    <input onChange={props.sortRicePrice} type=\"radio\" name=\"mycheck\" value=\"1\"/> по возрастанию\r\n                    цены<br/>\r\n                </label>\r\n                <label>\r\n                    <input onChange={props.sortDecreasePrice} type=\"radio\" name=\"mycheck\" value=\"2\"/> по убыванию\r\n                    цены<br/>\r\n                </label>\r\n                <label>\r\n                    <input onChange={props.sortRiceTime} type=\"radio\" name=\"mycheck\" value=\"3\"/> по времени в пути\r\n                </label>\r\n            </div>\r\n            <div className={'SortContainer'}>\r\n                <div>Фильтровать</div>\r\n                <div className={'checkBox'}>\r\n                    <label>\r\n                        <input onClick={props.withTransit} type={'checkBox'}/> - 1 пересадка\r\n                    </label>\r\n                    <label>\r\n                        <input onClick={props.noTransit} type={'checkBox'}/> - без пересадок\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className={'PriceContainer'}>\r\n                <div>Цена</div>\r\n                <input placeholder={'от'} onChange={onChangeHadlerMin} className={'price'} type={'text'}/>\r\n                <input  placeholder={'до'} name={\"до\"} onChange={onChangeHadlerMax} className={'price'} type={'text'}/>\r\n                <button onClick={props.sortPriceClient(minPrice, maxPrice)} className={'price'}>показать</button>\r\n            </div>\r\n            <div className={'airCompany'}>\r\n                <div>Авиакомпания</div>\r\n                {props.companyAndPrice.map((i) => {\r\n                    return (\r\n                        <div>\r\n                            <input onChange={props.sortCompanyName(i[1])} type={'checkBox'}/>\r\n                            <span>{i[1]} от {parseInt(i[2])} р. </span>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\nimport './App.css';\nimport * as data from \"./flights.json\"\nimport {FlyCard} from \"./Components/FlyCard/FlyCard\";\nimport {Nav} from \"./Components/NavSort/Nav\";\n\nfunction App() {\n    let result1 = JSON.stringify(data)\n    let result2 = JSON.parse(result1)\n    let result3 = result2.default.result.flights\n    let finishData = [];\n    for (let i = 0; i < result3.length; i++) {\n        finishData[i] = [\n            result3[i].flight.legs[0].segments[0].departureCity.caption,// - 0 город вылета\n            result3[i].flight.carrier.caption, // - 1 авиакомпания\n            result3[i].flight.price.totalFeeAndTaxes.amount, // -2 цена\n            result3[i].flight.legs[0].segments[0].departureAirport.caption, // - 3 Какой аэропорт\n            result3[i].flight.legs[0].segments[0].departureAirport.uid,// - 4 Абривиатура Аэропорта\n            result3[i].flight.legs[0].segments[result3[i].flight.legs[0].segments.length - 1].arrivalAirport.caption,// - 5 Аэропорт прилета\n            result3[i].flight.legs[0].segments[result3[i].flight.legs[0].segments.length - 1].arrivalDate,// - 6 дата прилета\n            result3[i].flight.legs[0].duration,// - 7 время в полете в минутах\n            result3[i].flight.legs[0].segments[0].departureDate, // - 8 время вылета\n            result3[i].flight.legs[0].segments.length,// - 9 есть или нет пересадка, если длина массива 1 - пересадки нет, если 2 есть пересадка\n            result3[i].flight.carrier.uid, // - 10 Абривиатура авиакомпании\n            result3[i].flight.legs[1].segments[0].departureAirport.caption,// 11 аэропорт вылета\n            result3[i].flight.legs[1].segments[0].departureAirport.uid,// 12 абрив аэтопорта\n            result3[i].flight.legs[1].segments[result3[i].flight.legs[1].segments.length - 1].arrivalAirport.caption,//13 аэропорт прилета\n            result3[i].flight.legs[1].segments[0].departureDate,//14 дата вылета\n            result3[i].flight.legs[1].duration,//15 время полета в минутах\n            result3[i].flight.legs[1].segments[result3[i].flight.legs[1].segments.length - 1].arrivalDate,//16 дата прилета\n            result3[i].flight.legs[1].segments.length,// 17 есть или нет пересадки\n            result3[i].flight.legs[0].duration + result3[i].flight.legs[1].duration,// 18 время в пути туда-обратно\n            result3[i].flight.legs[0].segments[result3[i].flight.legs[0].segments.length - 1].arrivalAirport.uid,//19 абривеатура аэропорта прибытия туда\n            result3[i].flight.legs[1].segments[result3[i].flight.legs[1].segments.length - 1].arrivalAirport.uid,//20 абривеатура аэропорта прибытия обратно\n        ]\n    }\n    let [finishData1, setFinishData1] = useState(finishData)\n    const noTransit = () => {\n        let checkData = finishData.filter(tic => tic[9] === 1)\n        setFinishData1(checkData.filter(tic => tic[17] === 1))\n    }\n    const withTransit = () => {\n        setFinishData1(finishData)\n    }\n    const sortRicePrice = () => {\n        let checkData = [\n            ...finishData.sort(function (a, b) {\n                return a[2] - b[2]\n            })\n        ]\n        setFinishData1(checkData)\n    }\n    const sortDecreasePrice = () => {\n        let dataForSort = [...finishData]\n        let checkData = [\n            ...dataForSort.sort(function (a, b) {\n                return b[2] - a[2]\n            })\n        ]\n        setFinishData1(checkData)\n    }\n    const sortRiceTime = () => {\n        let checkData = [\n            ...finishData.sort(function (a, b) {\n                return a[18] - b[18]\n            })\n        ]\n        setFinishData1(checkData)\n    }\n    const sortPriceClient = (min, max) => {\n        return () => {\n            let checkData = [\n                ...finishData.sort(function (a, b) {\n                    return a[2] - b[2]\n                })\n            ]\n            setFinishData1(checkData.filter(tic => tic[2] >= min).filter(tic => tic[2] <= max))\n        }\n    }\n    const sortCompanyName = (name) => {\n        return () => {\n\n            setFinishData1(finishData1.filter(tic => tic[1] == name))\n        }\n    }\n    let finishData2 = [...finishData1]\n    let companyAndMinPrice = [...finishData2.sort(function (a, b) {\n        return a[2] - b[2]\n    })]\n    let companyAndMinPrice1 = []\n    let company4 = []\n    companyAndMinPrice.map((i) => {\n        if (companyAndMinPrice1.includes(i[1])) {\n\n        } else {\n            companyAndMinPrice1.push(i[1])\n            company4.push(i)\n        }\n    })\n    let [countTickets, setCountTickets] = useState(2)\n    const showMoreTickets = () => {\n        setCountTickets(countTickets += 2)\n    }\n    return (\n        <div className={'main'}>\n            <div className={'nav'}>\n                <Nav\n                    data={finishData1}\n                    companyAndPrice={company4}\n                    sortRicePrice={sortRicePrice}\n                    sortDecreasePrice={sortDecreasePrice}\n                    sortRiceTime={sortRiceTime}\n                    withTransit={withTransit}\n                    noTransit={noTransit}\n                    sortPriceClient={sortPriceClient}\n                    sortCompanyName={sortCompanyName}\n\n                />\n            </div>\n            <div className={'tickets'}>\n                {finishData1.slice(0, countTickets)\n                    .map((inf) => {\n                            return <FlyCard\n                                departCity={inf[0]}\n                                companyName={inf[1]}\n                                price={inf[2]}\n                                airPortDepart={inf[3]}\n                                abbAir={inf[4]}\n                                airPortArriv={inf[5]}\n                                timeDep={inf[8]}\n                                flyTime={inf[7]}\n                                arrTime={inf[6]}\n                                isTransit={inf[9]}\n                                abbAirCom={inf[10]}\n                                airPortDepart2={inf[11]}\n                                abbAirDep2={inf[12]}\n                                airPortArriv2={inf[13]}\n                                departDate2={inf[14]}\n                                timeFly2={inf[15]}\n                                dateArriv2={inf[16]}\n                                isTransit2={inf[17]}\n                                abbAirArrive={inf[19]}\n                                abbAirArrive2={inf[20]}\n                            />\n                        }\n                    )}\n                <button className={'show-more'} onClick={showMoreTickets}> Показать еще</button>\n            </div>\n        </div>\n    );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}